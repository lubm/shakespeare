Our project allows the user to upload a single zip file in using the /admin 
page. This is only needed if the database is not loaded

Clicking on the Index button will start a MapReduce task and save the results in
the ndb database.
The results can also be seen in a file that becomes available after the 
completion of this job using a link that will appear in the index_link column 
after the completion of job.

The word search is ready and also the RPC call with Javascript.

Extensions:
	- Did you mean
		Suggest an existing word in the database if the user misspelled
		something. For this it chooses the word at distance 1 that appears the
		most in  shakespeare's works.
	- Visualization
		We show a treemap of the results. The size of a block is proportional to
		the number of occurences of the searched word in the respective work.
		For now we are displaying numbers instead of work's titles because we
		are changing something in our database model. 
	- Easter Egg
		If you enter the konami code (up up down down left right left right a b)
		in the homepage an alert will appear.
	- We are still working in enabling the user to search by character. We
		changed the database model, but we are still adding the search feature
		to the UI. The only way were is possible to see the characters rigth now
		is in the visualization, which we are still refactoring, anyway.

**************************      INPUT FORMAT      **************************

Our interface expects a zip file consisting of one or multiple text files. The
first non-empty line of each text file is regarded as the work's title.

**************************      RUN TESTS     **************************

We are using the nose-gae framework to run our tests 
Url: https://code.google.com/p/nose-gae/

This is one of the recommended framekorks in the AppEngine docs for local unit
testing.

For installing noseGAE:

$ sudo easy_install nose
$ sudo easy_install NoseGAE

To run the tests, execute this in the app directory.

$ nosetests --with-gae --without-sandbox tests/




